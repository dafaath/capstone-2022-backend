"""Update user database

Revision ID: d91f1309a83b
Revises: 2a06275b77aa
Create Date: 2022-05-09 14:41:06.683390

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'd91f1309a83b'
down_revision = '2a06275b77aa'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("items")
    op.drop_table("users")
    op.create_table('user',
                    sa.Column('id', postgresql.UUID(
                        as_uuid=True), nullable=False),
                    sa.Column('email', sa.String(), nullable=True),
                    sa.Column('password', sa.String(), nullable=True),
                    sa.Column('phone', sa.String(), nullable=True),
                    sa.Column('is_active', sa.Boolean(), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_id'), 'user', ['id'], unique=False)
    op.create_index(op.f('ix_user_phone'), 'user', ['phone'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('items',
                    sa.Column('id', sa.INTEGER(),
                              autoincrement=True, nullable=False),
                    sa.Column('title', sa.VARCHAR(),
                              autoincrement=False, nullable=True),
                    sa.Column('description', sa.VARCHAR(),
                              autoincrement=False, nullable=True),
                    sa.Column('owner_id', postgresql.UUID(),
                              autoincrement=False, nullable=True),
                    sa.Column('locus', sa.VARCHAR(),
                              autoincrement=False, nullable=True),
                    sa.ForeignKeyConstraint(
                        ['owner_id'], ['users.id'], name='items_owner_id_fkey'),
                    sa.PrimaryKeyConstraint('id', name='items_pkey')
                    )
    op.create_index('ix_items_title', 'items', ['title'], unique=False)
    op.create_index('ix_items_id', 'items', ['id'], unique=False)
    op.create_index('ix_items_description', 'items',
                    ['description'], unique=False)
    op.create_table('low',
                    sa.Column('id', sa.INTEGER(),
                              autoincrement=True, nullable=False),
                    sa.Column('title', sa.VARCHAR(),
                              autoincrement=False, nullable=True),
                    sa.Column('description', sa.VARCHAR(),
                              autoincrement=False, nullable=True),
                    sa.Column('owner_id', postgresql.UUID(),
                              autoincrement=False, nullable=True),
                    sa.ForeignKeyConstraint(
                        ['owner_id'], ['users.id'], name='low_owner_id_fkey'),
                    sa.PrimaryKeyConstraint('id', name='low_pkey')
                    )
    op.create_index('ix_low_title', 'low', ['title'], unique=False)
    op.create_index('ix_low_id', 'low', ['id'], unique=False)
    op.create_index('ix_low_description', 'low', ['description'], unique=False)
    op.create_table('users',
                    sa.Column('id', postgresql.UUID(),
                              autoincrement=False, nullable=False),
                    sa.Column('email', sa.VARCHAR(),
                              autoincrement=False, nullable=True),
                    sa.Column('password', sa.VARCHAR(),
                              autoincrement=False, nullable=True),
                    sa.Column('is_active', sa.BOOLEAN(),
                              autoincrement=False, nullable=True),
                    sa.PrimaryKeyConstraint('id', name='users_pkey')
                    )
    op.create_index('ix_users_id', 'users', ['id'], unique=False)
    op.create_index('ix_users_email', 'users', ['email'], unique=False)
    op.drop_index(op.f('ix_user_phone'), table_name='user')
    op.drop_index(op.f('ix_user_id'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    # ### end Alembic commands ###
