name: Deploy this application
on:
  push:
    branches: [master, feature/github-action]

jobs:
  deploy_source:
    name: Test and deploying to server
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11
        env:
          # optional (defaults to `postgres`)
          POSTGRES_DB: test_emodiary
          # required
          POSTGRES_PASSWORD: postgres
          # optional (defaults to `5432`)
          POSTGRES_PORT: 5432
          # optional (defaults to `postgres`)
          POSTGRES_USER: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-python@master
        with:
          python-version: "3.9" # Version range or exact version of a Python version to use, using SemVer's version range syntax
      - uses: actions/setup-node@master
        with:
          node-version: 16
      - name: Create .env file
        run: |
          echo "$REGULAR_ENV_FILE" > .env
          echo "$PROD_ENV_FILE" > prod.env
          echo "$GOOGLE_CLOUD_KEY_DATA" > service-account.json
          echo "$GOOGLE_CLOUD_KEY_DATA_TEST" > service-account-test.json
        env:
          REGULAR_ENV_FILE: "${{secrets.REGULAR_ENV}}"
          PROD_ENV_FILE: "${{secrets.PRODUCTION_ENV}}"
          GOOGLE_CLOUD_KEY_DATA: "${{secrets.GOOGLE_CLOUD_KEY_DATA}}"
          GOOGLE_CLOUD_KEY_DATA_TEST: "${{secrets.GOOGLE_CLOUD_KEY_DATA_TEST}}"
      - name: Install npm on postman folder and sync api
        run: |
          cd postman
          npm install 
          node index.js
      - name: Install pipenv
        run: pip install pipenv
      - name: Install dependecies
        run: pipenv install
      - name: Test code and run formatter
        run: |
          pipenv run isort
          pipenv run format
          pipenv run test
          pipenv requirements > requirements.txt
        env:
          ENV: "test"
          DB_USER: postgres
          DB_PASS: postgres
          DB_HOST: localhost
          DB_PORT: 5432
          DB_NAME: test_emodiary

      - name: Verify Changed files
        uses: tj-actions/verify-changed-files@v9
        id: verify-changed-files
        with:
          files: |
            app/**/*.py
      - name: Extract branch name
        if: steps.verify-changed-files.outputs.files_changed == 'true'
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - name: Push changes
        if: steps.verify-changed-files.outputs.files_changed == 'true'
        run: |
          git config --global user.name 'Muhammad Dafa Athaullah'
          git config --global user.email 'dafaathaullah123@gmail.com'
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git commit -am "Automated changes for formatting purposes"
          git push origin ${{ steps.extract_branch.outputs.branch }}
      - name: Authentication to google service account
        id: "auth"
        uses: "google-github-actions/auth@v0"
        with:
          credentials_json: "${{ secrets.GOOGLE_CLOUD_KEY_DATA_DEPLOY }}"

      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v0"

      - name: Deploy to google app engine
        id: "deploy"
        uses: "google-github-actions/deploy-appengine@v0"
        with:
          project_id: "emodiary-bangkit"
          promote: false
      - name: Set deploy url as ENV
        run: echo "PRODUCTION_BASE_URL="${{ steps.deploy.outputs.url }}" >> $GITHUB_ENV
      - name: Test newly deployed server
        run: pipenv run test -c test_production_env.ini -s
      - name: Migrate to new version if test success and delete old version
        run: |
          yes Y | gcloud app services set-traffic default --splits $(echo "$PRODUCTION_BASE_URL" | cut -d / -f 3 | cut -d - -f 1)=1 --project="emodiary-bangkit"
      - id: remove
        name: Remove old version beyond newest 3
        uses: Reviewable/appengine-remove-action@v2.1.2
        with:
          limit: 3
          project_id: "emodiary-bangkit"
          service_name: "default"
