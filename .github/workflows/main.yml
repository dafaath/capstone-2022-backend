name: Deploy this application
on:
  push:
    branches: [master, feature/github-action]

jobs:
  deploy_source:
    name: Test and deploying to server
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11
        env:
          # optional (defaults to `postgres`)
          POSTGRES_DB: test_emodiary
          # required
          POSTGRES_PASSWORD: postgres
          # optional (defaults to `5432`)
          POSTGRES_PORT: 5432
          # optional (defaults to `postgres`)
          POSTGRES_USER: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-python@master
        with:
          python-version: "3.10" # Version range or exact version of a Python version to use, using SemVer's version range syntax
      - uses: actions/setup-node@master
        with:
          node-version: 16
      - name: Create .env file
        run: |
          echo "$PROD_ENV_FILE" > .env
        env:
          PROD_ENV_FILE: "${{secrets.PRODUCTION_ENV}}"
          GOOGLE_CLOUD_KEY_DATA: "${{secrets.GOOGLE_CLOUD_KEY}}"
      - name: Install npm on postman folder and sync api
        run: |
          cd postman
          npm install 
          node index.js
      - name: Install python dependencies
        run: |
          pip install --upgrade pip
          python -m venv env
          source env/bin/activate
          pip install -r requirements.txt
      - name: Test code and run formatter
        run: |
          source env/bin/activate
          pytest
          isort app/
          autopep8 --in-place --recursive app/
        env:
          ENV: "test"
          DB_USER: postgres
          DB_PASS: postgres
          DB_HOST: localhost
          DB_PORT: 5432
          DB_NAME: test_emodiary

      - name: Check for modified files
        id: git-check
        run: echo ::set-output name=modified::$(if git diff-index --quiet HEAD --; then echo "false"; else echo "true"; fi)
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - name: Push changes
        if: steps.git-check.outputs.modified == 'true'
        run: |
          git config --global user.name 'Muhammad Dafa Athaullah'
          git config --global user.email 'dafaathaullah123@gmail.com'
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git commit -am "Automated changes for formatting purposes"
          git push origin ${{ steps.extract_branch.outputs.branch }}
